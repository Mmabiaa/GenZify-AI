
import React, { useState } from "react";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { Input } from "@/components/ui/input";
import { 
  Select, 
  SelectContent, 
  SelectItem, 
  SelectTrigger, 
  SelectValue 
} from "@/components/ui/select";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Slider } from "@/components/ui/slider";
import { Label } from "@/components/ui/label";
import { useToast } from "@/hooks/use-toast";
import { Sparkles, Copy, FileText, Loader2, ImagePlus, Music, Code, RotateCcw, VideoIcon, FileIcon, Download, MessageSquare } from "lucide-react";
import Navbar from "@/components/Navbar";
import Footer from "@/components/Footer";

type ContentType = "text" | "image" | "code" | "video" | "document";

// Document template types
const documentTemplates = [
  { value: "article", label: "Blog Article" },
  { value: "report", label: "Technical Report" },
  { value: "business", label: "Business Proposal" },
  { value: "academic", label: "Academic Paper" },
  { value: "marketing", label: "Marketing Material" }
];

// Video script types
const videoTemplates = [
  { value: "explainer", label: "Explainer Video" },
  { value: "tutorial", label: "Tutorial" },
  { value: "commercial", label: "Advertisement" },
  { value: "social", label: "Social Media" },
  { value: "presentation", label: "Presentation" }
];

export default function ContentGenerator() {
  const [prompt, setPrompt] = useState("");
  const [generatedContent, setGeneratedContent] = useState("");
  const [isGenerating, setIsGenerating] = useState(false);
  const [contentType, setContentType] = useState<ContentType>("text");
  const [tone, setTone] = useState("professional");
  const [creativity, setCreativity] = useState([50]);
  const [documentTemplate, setDocumentTemplate] = useState("article");
  const [videoTemplate, setVideoTemplate] = useState("explainer");
  const { toast } = useToast();
  
  const generateContent = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!prompt.trim()) {
      toast({
        title: "Empty prompt",
        description: "Please enter a prompt to generate content.",
        variant: "destructive",
      });
      return;
    }
    
    setIsGenerating(true);
    
    // Simulate generation delay
    setTimeout(() => {
      let result = "";
      
      if (contentType === "text") {
        const toneMapping = {
          professional: "This is a professionally generated text based on your prompt. It is clear, concise, and uses industry-standard terminology appropriate for business contexts.",
          casual: "Hey there! Here's a casual take on what you asked for. It's friendly, conversational, and pretty relaxed overall.",
          enthusiastic: "WOW! I'm SUPER excited to share this AMAZING content with you! It's full of energy and enthusiasm that will definitely grab attention!",
          formal: "Herein lies a formal response to your query, characterized by sophisticated language, proper structure, and a distinct lack of colloquialisms.",
          humorous: "Why did the AI cross the road? To get to the other algorithm! Jokes aside (or not), here's a funny take on your request that should give you a chuckle."
        };
        
        result = `${toneMapping[tone as keyof typeof toneMapping]}\n\n`;
        result += `Your prompt was about "${prompt}", and this response is generated with ${creativity[0]}% creativity level. In a production environment, this would be generated by an actual AI model.`;
      } else if (contentType === "image") {
        result = "Image generation is simulated in this demo. In a production environment, this would connect to an image generation API like DALL-E or Midjourney to create images based on your prompt.";
      } else if (contentType === "code") {
        result = `// Generated code sample based on prompt: ${prompt}\n\n`;
        result += `function generateSolution() {\n  // This is a simulated code response\n  // In production, this would be generated by an actual AI model\n  console.log("Implementing solution for: ${prompt}");\n  \n  // Your implementation would go here\n  return "Solution implemented with ${creativity[0]}% creativity";\n}\n\n// Call the function\ngenerateSolution();`;
      } else if (contentType === "video") {
        const videoTemplateContent = {
          explainer: `# Explainer Video Script: ${prompt}\n\n## SCENE 1: INTRODUCTION\n[Visual: Simple animated graphics showing the concept]\n\nVOICEOVER: Have you ever wondered about ${prompt}? Today, we're breaking it down in simple terms.\n\n## SCENE 2: THE PROBLEM\n[Visual: Character facing a challenge]\n\nVOICEOVER: Many people struggle with understanding how this works, often leading to confusion and mistakes.\n\n## SCENE 3: THE SOLUTION\n[Visual: Character discovering the solution]\n\nVOICEOVER: But there's a simpler way to approach this. By focusing on these three key elements...\n\n## SCENE 4: BREAKDOWN OF SOLUTION\n[Visual: Step-by-step animated breakdown]\n\nVOICEOVER: First, we need to understand the basics. Then, we can apply this knowledge to solve our problem. Finally, we implement the solution in real-world scenarios.\n\n## SCENE 5: CONCLUSION\n[Visual: Character successfully implementing the solution]\n\nVOICEOVER: And that's it! A straightforward approach to ${prompt}. Subscribe for more explainers like this one.`,
          tutorial: `# Tutorial Video Script: How to ${prompt}\n\n## INTRO (0:00-0:30)\n"Hello and welcome! Today I'm going to show you step-by-step how to ${prompt}. This tutorial is perfect for beginners and will take about 10 minutes to complete."\n\n## MATERIALS/PREREQUISITES (0:30-1:00)\n"Before we start, here's what you'll need: [list of tools/materials/prerequisites]. Make sure you have everything ready before continuing."\n\n## STEP 1 (1:00-3:00)\n"First, we need to [detailed explanation of first step]. Pay special attention to [important detail]. A common mistake here is [potential pitfall], so be careful to avoid that."\n\n## STEP 2 (3:00-5:00)\n"Now that we've completed the first step, let's move on to [second step]. This part is crucial because [explanation of importance]."\n\n## STEP 3 (5:00-7:00)\n"We're making great progress! The next step is to [detailed explanation of third step]. You'll know you've done this correctly when [sign of success]."\n\n## TROUBLESHOOTING (7:00-8:30)\n"If you're running into problems, here are some common issues and how to fix them: [list of common problems and solutions]."\n\n## FINAL RESULT & CONCLUSION (8:30-10:00)\n"And there you have it! You've successfully learned how to ${prompt}. Let's review what we've covered today: [brief summary of steps]. If you found this tutorial helpful, please like and subscribe for more content like this!"`,
          commercial: `# Commercial Script: ${prompt}\n\n## OPENING SHOT (0:00-0:05)\n[Attention-grabbing visual related to problem being solved]\n\nVOICEOVER: "Ever felt frustrated by [problem related to prompt]?"\n\n## PROBLEM STATEMENT (0:05-0:15)\n[Visuals of people struggling with the problem]\n\nVOICEOVER: "Millions of people waste time and money trying to solve this every day."\n\n## PRODUCT INTRODUCTION (0:15-0:25)\n[Product appears with dramatic reveal]\n\nVOICEOVER: "Introducing [Product Name]: The revolutionary solution for ${prompt}."\n\n## FEATURES AND BENEFITS (0:25-0:45)\n[Quick cuts showing product features]\n\nVOICEOVER: "With its innovative design, [Product Name] offers [key benefit 1], [key benefit 2], and [key benefit 3]."\n\n## TESTIMONIAL (0:45-0:55)\n[Happy customer using product]\n\nCUSTOMER: "I couldn't believe how easy it was! [Product Name] changed everything for me."\n\n## CALL TO ACTION (0:55-1:00)\n[Product with website/phone number]\n\nVOICEOVER: "Don't wait another day. Visit [website] or call now to get your [Product Name]. Available for just $XX.XX if you order today!"`,
          social: `# Social Media Video Script: ${prompt}\n\n## HOOK (0:00-0:05)\n[Attention-grabbing visual or statement]\n\nHOST: "Stop scrolling! You won't believe what I discovered about ${prompt}..."\n\n## INTRODUCTION (0:05-0:15)\n[Host introduces themselves and the topic]\n\nHOST: "Hey everyone! Today we're diving into something that's been trending everywhere - ${prompt}."\n\n## MAIN CONTENT (0:15-0:55)\n[Quick-cut visuals with text overlays for key points]\n\nHOST: "Here are 3 things you absolutely need to know:\n1. [First interesting fact/tip] ðŸ‘€\n2. [Second interesting fact/tip] ðŸ”¥\n3. [Third interesting fact/tip] ðŸ’¯"\n\n## ENGAGEMENT PROMPT (0:55-1:00)\n[Call to action with engaging question]\n\nHOST: "What do you think about ${prompt}? Drop your thoughts in the comments below! Don't forget to like and follow for more content like this!"`,
          presentation: `# Presentation Video Script: ${prompt}\n\n## TITLE SLIDE (0:00-0:10)\n[Professional title slide with topic and presenter name]\n\nPRESENTER: "Good [morning/afternoon/evening], and welcome to this presentation on ${prompt}. I'm [Name], and today we'll explore the implications and opportunities in this important area."\n\n## AGENDA (0:10-0:30)\n[Slide showing outline of presentation]\n\nPRESENTER: "Here's what we'll cover today: First, an overview of ${prompt}. Second, key challenges and opportunities. Third, strategic recommendations. And finally, next steps and Q&A."\n\n## SECTION 1: OVERVIEW (0:30-2:00)\n[Series of informative slides with data visualizations]\n\nPRESENTER: "Let's begin with understanding ${prompt} in context. As you can see from this data, there are several critical factors at play here..."\n\n## SECTION 2: CHALLENGES & OPPORTUNITIES (2:00-4:00)\n[Slides showing problems and solutions]\n\nPRESENTER: "The main challenges we face include [challenge 1], [challenge 2], and [challenge 3]. However, each challenge presents a unique opportunity..."\n\n## SECTION 3: STRATEGIC RECOMMENDATIONS (4:00-6:00)\n[Action plan slides with implementation timeline]\n\nPRESENTER: "Based on our analysis, we recommend the following course of action: First, [recommendation 1]. Second, [recommendation 2]. And third, [recommendation 3]."\n\n## CONCLUSION & NEXT STEPS (6:00-7:00)\n[Summary slide and action items]\n\nPRESENTER: "To summarize, ${prompt} represents a significant [opportunity/challenge] that requires [key approach]. Our next steps should be to [action 1], [action 2], and [action 3]."\n\n## Q&A PROMPT (7:00-7:30)\n[Contact information slide]\n\nPRESENTER: "Thank you for your attention. I'm now happy to take any questions you might have about our discussion of ${prompt}."`,
        };
        
        result = videoTemplateContent[videoTemplate as keyof typeof videoTemplateContent];
      } else if (contentType === "document") {
        const documentTemplateContent = {
          article: `# ${prompt}\n\n## Introduction\nIn recent years, there has been growing interest in ${prompt}. This article explores the key aspects, challenges, and future directions of this important topic.\n\n## Background\n${prompt} has evolved significantly over time, with roots dating back to [relevant historical context]. Understanding this evolution provides valuable context for current developments.\n\n## Key Aspects\n### First Major Point\nOne of the most significant elements of ${prompt} involves [detailed explanation]. This has important implications for [related field or application].\n\n### Second Major Point\nEqually important is [another key aspect of the topic]. Research has shown that [relevant findings or statistics].\n\n### Third Major Point\nFinally, we must consider [third key element]. This aspect often connects to broader issues such as [related broader concepts].\n\n## Analysis and Implications\nWhen analyzing ${prompt} holistically, several patterns emerge. First, [observation 1]. Second, [observation 2]. These patterns suggest [implications].\n\n## Future Directions\nLooking ahead, ${prompt} is likely to develop in several key directions:\n- [Future trend 1]\n- [Future trend 2]\n- [Future trend 3]\n\n## Conclusion\nIn conclusion, ${prompt} represents a complex and evolving area with significant implications for [relevant fields]. By understanding its key components and future trajectory, we can better prepare for upcoming developments and challenges.\n\n## References\n1. [Placeholder for reference 1]\n2. [Placeholder for reference 2]\n3. [Placeholder for reference 3]`,
          
          report: `# Technical Report: ${prompt}\n\n## Executive Summary\nThis report provides a comprehensive technical analysis of ${prompt}. Our investigation reveals [key finding 1], [key finding 2], and [key finding 3]. Based on these findings, we recommend [primary recommendation].\n\n## 1. Introduction\n### 1.1 Purpose\nThis technical report aims to analyze and document ${prompt}, with particular focus on [specific aspects].\n\n### 1.2 Scope\nThe scope of this analysis encompasses [description of technical boundaries and limitations].\n\n## 2. Methodology\n### 2.1 Technical Approach\nOur investigation employed the following methodologies:\n- [Methodology 1]\n- [Methodology 2]\n- [Methodology 3]\n\n### 2.2 Tools and Technologies\nThe following tools were utilized in this analysis:\n- [Tool/Technology 1]\n- [Tool/Technology 2]\n- [Tool/Technology 3]\n\n## 3. Technical Analysis\n### 3.1 Component Evaluation\n[Detailed technical analysis of relevant components]\n\n### 3.2 Performance Metrics\n[Quantitative data and performance measurements]\n\n### 3.3 Technical Limitations\n[Identified constraints and technical boundaries]\n\n## 4. Findings\n### 4.1 Primary Observations\n[Key technical discoveries]\n\n### 4.2 Anomalies and Issues\n[Technical problems or unexpected behaviors identified]\n\n### 4.3 Root Cause Analysis\n[Determination of underlying causes]\n\n## 5. Recommendations\n### 5.1 Technical Solutions\n[Proposed solutions with technical specifications]\n\n### 5.2 Implementation Roadmap\n[Phased approach to implementing recommendations]\n\n### 5.3 Risk Assessment\n[Technical risks and mitigation strategies]\n\n## 6. Conclusion\n[Summary of technical findings and path forward]\n\n## 7. Appendices\n### Appendix A: Technical Specifications\n[Detailed technical data]\n\n### Appendix B: Test Results\n[Comprehensive test results]\n\n### Appendix C: Reference Documentation\n[Links to relevant technical documentation]`,
          
          business: `# Business Proposal: ${prompt}\n\n## Executive Summary\nThis proposal outlines a comprehensive business strategy for ${prompt}. We identify a significant market opportunity worth approximately [market size] with a projected annual growth rate of [growth percentage]. Our solution addresses [key pain point] experienced by [target audience] and offers an estimated ROI of [ROI projection] within [timeframe].\n\n## The Opportunity\n### Market Analysis\nThe current market for solutions addressing ${prompt} is [market characteristics and size]. Key trends include [trend 1], [trend 2], and [trend 3].\n\n### Target Audience\nOur primary customer segments include:\n- [Customer segment 1]: [brief description and needs]\n- [Customer segment 2]: [brief description and needs]\n- [Customer segment 3]: [brief description and needs]\n\n### Competitive Landscape\n[Analysis of current competitors and their offerings]\n\n## Our Solution\n### Value Proposition\n[Clear statement of unique value proposition]\n\n### Product/Service Description\n[Detailed description of proposed product or service]\n\n### Unique Advantages\n- [Competitive advantage 1]\n- [Competitive advantage 2]\n- [Competitive advantage 3]\n\n## Business Model\n### Revenue Streams\n[Description of how the business will generate revenue]\n\n### Pricing Strategy\n[Outline of pricing model and rationale]\n\n### Cost Structure\n[Overview of major cost categories and approximate amounts]\n\n## Implementation Plan\n### Timeline\n[Phased approach with key milestones]\n\n### Resource Requirements\n[Personnel, technological, and financial resources needed]\n\n### Key Metrics\n[Specific KPIs that will be tracked]\n\n## Financial Projections\n### Investment Required\n[Total funding needed and allocation]\n\n### 3-Year Forecast\n[Projected revenue, expenses, and profitability]\n\n### Break-even Analysis\n[Calculation of when the venture will become profitable]\n\n## Risk Assessment\n[Identification of key risks and mitigation strategies]\n\n## Conclusion\n[Compelling closing argument for why this proposal should be supported]\n\n## Appendices\n[Supporting documentation, market research, etc.]`,
          
          academic: `# Academic Paper: ${prompt}\n\n## Abstract\nThis research examines ${prompt} through [methodological approach]. Our findings indicate [key result 1], [key result 2], and [key result 3]. These results have significant implications for [academic field] and contribute to the theoretical understanding of [broader academic concept].\n\n## 1. Introduction\nThe study of ${prompt} has become increasingly relevant in contemporary [academic field] research. Despite growing scholarly interest, significant gaps remain in our understanding of [specific aspect of topic]. This paper addresses these gaps by [research approach].\n\n### 1.1 Research Questions\nThis study addresses the following research questions:\n1. [Research question 1]\n2. [Research question 2]\n3. [Research question 3]\n\n### 1.2 Theoretical Framework\nThis research is situated within [theoretical tradition or framework], building particularly on the work of [key scholars].\n\n## 2. Literature Review\n### 2.1 Historical Context\n[Review of historical development of the topic]\n\n### 2.2 Current State of Research\n[Analysis of contemporary scholarly perspectives]\n\n### 2.3 Identified Gaps\n[Specific areas where research is lacking or inconclusive]\n\n## 3. Methodology\n### 3.1 Research Design\n[Detailed explanation of research design and rationale]\n\n### 3.2 Data Collection\n[Methods used to gather data]\n\n### 3.3 Analytical Approach\n[Techniques employed to analyze the data]\n\n### 3.4 Ethical Considerations\n[Discussion of relevant ethical issues and how they were addressed]\n\n## 4. Results\n### 4.1 Finding One\n[Presentation of first major finding with supporting evidence]\n\n### 4.2 Finding Two\n[Presentation of second major finding with supporting evidence]\n\n### 4.3 Finding Three\n[Presentation of third major finding with supporting evidence]\n\n## 5. Discussion\n### 5.1 Theoretical Implications\n[How the findings contribute to theory]\n\n### 5.2 Practical Applications\n[Real-world relevance of the research]\n\n### 5.3 Limitations\n[Acknowledged constraints of the study]\n\n## 6. Conclusion\n[Summary of key findings and their significance]\n\n## 7. References\n[Academic citations in appropriate format]\n\n## 8. Appendices\n[Supplementary materials, data tables, etc.]`,
          
          marketing: `# Marketing Plan: ${prompt}\n\n## Executive Summary\nThis marketing plan outlines our strategy for promoting ${prompt}. Our research indicates a target market size of approximately [market size] with [growth potential]. We've identified [key audience segment] as our primary demographic, with a proposed marketing budget of [budget amount] expected to generate a [ROI projection] return on investment.\n\n## 1. Market Analysis\n### 1.1 Industry Overview\n[Current state and trends in the relevant industry]\n\n### 1.2 Target Market\n[Detailed demographic and psychographic profile]\n\n### 1.3 Competitor Analysis\n[Overview of key competitors and their marketing approaches]\n\n### 1.4 SWOT Analysis\n**Strengths:**\n- [Strength 1]\n- [Strength 2]\n- [Strength 3]\n\n**Weaknesses:**\n- [Weakness 1]\n- [Weakness 2]\n- [Weakness 3]\n\n**Opportunities:**\n- [Opportunity 1]\n- [Opportunity 2]\n- [Opportunity 3]\n\n**Threats:**\n- [Threat 1]\n- [Threat 2]\n- [Threat 3]\n\n## 2. Marketing Strategy\n### 2.1 Brand Positioning\n[How the brand should be perceived in the marketplace]\n\n### 2.2 Value Proposition\n[Core benefits and unique selling points]\n\n### 2.3 Messaging Framework\n[Key messages tailored to different audience segments]\n\n## 3. Marketing Tactics\n### 3.1 Digital Marketing\n- **Website:** [Website strategy]\n- **SEO/SEM:** [Search marketing approach]\n- **Content Marketing:** [Content strategy]\n- **Social Media:** [Social platforms and tactics]\n- **Email Marketing:** [Email campaign strategy]\n\n### 3.2 Traditional Marketing\n- **Print:** [Print marketing strategy]\n- **Events:** [Event marketing plans]\n- **Public Relations:** [PR approach]\n\n### 3.3 Sales Enablement\n[Materials and support for the sales team]\n\n## 4. Implementation Plan\n### 4.1 Timeline\n[Month-by-month marketing activities]\n\n### 4.2 Budget Allocation\n[Breakdown of marketing spend by channel]\n\n### 4.3 Team Responsibilities\n[Who is responsible for each aspect of the plan]\n\n## 5. Measurement & KPIs\n### 5.1 Success Metrics\n[Specific metrics to track]\n\n### 5.2 Reporting Schedule\n[When and how results will be reported]\n\n### 5.3 Optimization Plan\n[How the strategy will be refined based on results]\n\n## 6. Conclusion\n[Summary of marketing approach and expected outcomes]\n\n## 7. Appendices\n[Supporting research, creative briefs, etc.]`
        };
        
        result = documentTemplateContent[documentTemplate as keyof typeof documentTemplateContent];
      }
      
      setGeneratedContent(result);
      setIsGenerating(false);
      
      toast({
        title: "Content generated",
        description: "Your content has been generated successfully.",
      });
    }, 2000);
  };
  
  const handleCopyToClipboard = () => {
    navigator.clipboard.writeText(generatedContent);
    toast({
      title: "Copied to clipboard",
      description: "Content has been copied to your clipboard.",
    });
  };
  
  const handleReset = () => {
    setPrompt("");
    setGeneratedContent("");
    setTone("professional");
    setCreativity([50]);
    setDocumentTemplate("article");
    setVideoTemplate("explainer");
  };
  
  const handleDownload = () => {
    // Create file name based on content type
    const fileExtension = contentType === "code" ? "js" : 
                          contentType === "document" ? "md" : 
                          contentType === "video" ? "md" : "txt";
    
    const fileName = `ai-generated-${contentType}.${fileExtension}`;
    
    // Create a blob and download it
    const blob = new Blob([generatedContent], { type: "text/plain" });
    const url = URL.createObjectURL(blob);
    const link = document.createElement("a");
    link.href = url;
    link.download = fileName;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    
    toast({
      title: "File downloaded",
      description: `Your content has been downloaded as ${fileName}`,
    });
  };
  
  return (
    <div className="min-h-screen flex flex-col">
      <Navbar />
      
      <main className="flex-1 container mx-auto px-4 py-8">
        <div className="max-w-5xl mx-auto">
          <div className="flex justify-between items-center mb-6">
            <h1 className="text-2xl md:text-3xl font-bold">AI Content Generator</h1>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <Card className="md:col-span-1">
              <CardHeader>
                <CardTitle>Content Settings</CardTitle>
                <CardDescription>Configure your content generation preferences</CardDescription>
              </CardHeader>
              <CardContent>
                <form onSubmit={generateContent} className="space-y-6">
                  <div className="space-y-2">
                    <Label htmlFor="content-type">Content Type</Label>
                    <Tabs 
                      value={contentType} 
                      onValueChange={(value) => setContentType(value as ContentType)} 
                      className="w-full"
                    >
                      <TabsList className="grid grid-cols-5 w-full">
                        <TabsTrigger value="text" className="flex items-center gap-2">
                          <MessageSquare className="h-4 w-4" />
                          <span className="hidden sm:inline">Text</span>
                        </TabsTrigger>
                        <TabsTrigger value="document" className="flex items-center gap-2">
                          <FileIcon className="h-4 w-4" />
                          <span className="hidden sm:inline">Doc</span>
                        </TabsTrigger>
                        <TabsTrigger value="image" className="flex items-center gap-2">
                          <ImagePlus className="h-4 w-4" />
                          <span className="hidden sm:inline">Image</span>
                        </TabsTrigger>
                        <TabsTrigger value="video" className="flex items-center gap-2">
                          <VideoIcon className="h-4 w-4" />
                          <span className="hidden sm:inline">Video</span>
                        </TabsTrigger>
                        <TabsTrigger value="code" className="flex items-center gap-2">
                          <Code className="h-4 w-4" />
                          <span className="hidden sm:inline">Code</span>
                        </TabsTrigger>
                      </TabsList>
                    </Tabs>
                  </div>
                  
                  {contentType === "text" && (
                    <div className="space-y-2">
                      <Label htmlFor="tone">Tone</Label>
                      <Select value={tone} onValueChange={setTone}>
                        <SelectTrigger>
                          <SelectValue placeholder="Select tone" />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="professional">Professional</SelectItem>
                          <SelectItem value="casual">Casual</SelectItem>
                          <SelectItem value="enthusiastic">Enthusiastic</SelectItem>
                          <SelectItem value="formal">Formal</SelectItem>
                          <SelectItem value="humorous">Humorous</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>
                  )}
                  
                  {contentType === "document" && (
                    <div className="space-y-2">
                      <Label htmlFor="documentTemplate">Document Type</Label>
                      <Select value={documentTemplate} onValueChange={setDocumentTemplate}>
                        <SelectTrigger>
                          <SelectValue placeholder="Select document type" />
                        </SelectTrigger>
                        <SelectContent>
                          {documentTemplates.map(template => (
                            <SelectItem key={template.value} value={template.value}>
                              {template.label}
                            </SelectItem>
                          ))}
                        </SelectContent>
                      </Select>
                    </div>
                  )}
                  
                  {contentType === "video" && (
                    <div className="space-y-2">
                      <Label htmlFor="videoTemplate">Video Type</Label>
                      <Select value={videoTemplate} onValueChange={setVideoTemplate}>
                        <SelectTrigger>
                          <SelectValue placeholder="Select video type" />
                        </SelectTrigger>
                        <SelectContent>
                          {videoTemplates.map(template => (
                            <SelectItem key={template.value} value={template.value}>
                              {template.label}
                            </SelectItem>
                          ))}
                        </SelectContent>
                      </Select>
                    </div>
                  )}
                  
                  <div className="space-y-3">
                    <div className="flex justify-between">
                      <Label htmlFor="creativity">Creativity</Label>
                      <span className="text-sm text-muted-foreground">{creativity[0]}%</span>
                    </div>
                    <Slider
                      id="creativity"
                      min={0}
                      max={100}
                      step={1}
                      value={creativity}
                      onValueChange={setCreativity}
                    />
                    <div className="flex justify-between text-xs text-muted-foreground">
                      <span>Precise</span>
                      <span>Balanced</span>
                      <span>Creative</span>
                    </div>
                  </div>
                  
                  <div className="space-y-2">
                    <Label htmlFor="prompt">Your Prompt</Label>
                    <Textarea
                      id="prompt"
                      placeholder={
                        contentType === "text"
                          ? "Enter a prompt for text generation..."
                          : contentType === "document"
                          ? "Describe the document you want to create..."
                          : contentType === "image"
                          ? "Describe the image you want to generate..."
                          : contentType === "video"
                          ? "Describe the video script you want to create..."
                          : "Describe the code you want to generate..."
                      }
                      value={prompt}
                      onChange={(e) => setPrompt(e.target.value)}
                      className="min-h-[100px]"
                    />
                  </div>
                  
                  <div className="flex space-x-2">
                    <Button
                      type="submit"
                      className="w-full"
                      disabled={isGenerating || !prompt.trim()}
                    >
                      {isGenerating ? (
                        <>
                          <Loader2 className="mr-2 h-4 w-4 animate-spin" /> Generating
                        </>
                      ) : (
                        <>
                          <Sparkles className="mr-2 h-4 w-4" /> Generate
                        </>
                      )}
                    </Button>
                    <Button
                      type="button"
                      variant="outline"
                      onClick={handleReset}
                      disabled={isGenerating}
                    >
                      <RotateCcw className="h-4 w-4" />
                    </Button>
                  </div>
                </form>
              </CardContent>
            </Card>
            
            <Card className="md:col-span-2">
              <CardHeader>
                <CardTitle>Generated Content</CardTitle>
                <CardDescription>
                  Your AI-generated content will appear here
                </CardDescription>
              </CardHeader>
              <CardContent>
                {isGenerating ? (
                  <div className="h-96 flex items-center justify-center">
                    <div className="flex flex-col items-center">
                      <Loader2 className="h-10 w-10 animate-spin text-primary" />
                      <p className="mt-4 text-foreground/70">
                        Generating your content...
                      </p>
                    </div>
                  </div>
                ) : generatedContent ? (
                  <div className="bg-muted rounded-md p-4 min-h-96 max-h-96 overflow-y-auto">
                    <pre className="whitespace-pre-wrap font-sans text-sm">
                      {generatedContent}
                    </pre>
                  </div>
                ) : (
                  <div className="h-96 flex items-center justify-center border border-dashed rounded-md">
                    <div className="text-center p-4">
                      <Sparkles className="mx-auto h-8 w-8 text-muted-foreground mb-3" />
                      <h3 className="text-lg font-medium">Nothing generated yet</h3>
                      <p className="text-sm text-muted-foreground max-w-xs mt-2">
                        Enter a prompt and click generate to create AI content
                      </p>
                    </div>
                  </div>
                )}
              </CardContent>
              {generatedContent && (
                <CardFooter className="flex flex-wrap gap-2">
                  <Button variant="outline" onClick={handleCopyToClipboard}>
                    <Copy className="mr-2 h-4 w-4" /> Copy to Clipboard
                  </Button>
                  
                  <Button variant="outline" onClick={handleDownload}>
                    <Download className="mr-2 h-4 w-4" /> Download
                  </Button>
                </CardFooter>
              )}
            </Card>
          </div>
          
          <div className="mt-12">
            <Card>
              <CardHeader>
                <CardTitle>How It Works</CardTitle>
              </CardHeader>
              <CardContent className="grid gap-6 sm:grid-cols-3">
                <div className="flex flex-col items-center text-center p-4">
                  <div className="bg-primary/10 p-3 rounded-full mb-4">
                    <FileText className="h-6 w-6 text-primary" />
                  </div>
                  <h3 className="font-medium mb-2">1. Enter Your Prompt</h3>
                  <p className="text-sm text-muted-foreground">
                    Describe what you want to create in natural language
                  </p>
                </div>
                
                <div className="flex flex-col items-center text-center p-4">
                  <div className="bg-primary/10 p-3 rounded-full mb-4">
                    <Sparkles className="h-6 w-6 text-primary" />
                  </div>
                  <h3 className="font-medium mb-2">2. AI Generates Content</h3>
                  <p className="text-sm text-muted-foreground">
                    Our AI models transform your prompt into high-quality content
                  </p>
                </div>
                
                <div className="flex flex-col items-center text-center p-4">
                  <div className="bg-primary/10 p-3 rounded-full mb-4">
                    <Copy className="h-6 w-6 text-primary" />
                  </div>
                  <h3 className="font-medium mb-2">3. Use & Edit</h3>
                  <p className="text-sm text-muted-foreground">
                    Copy, edit or save the generated content for your projects
                  </p>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </main>
      
      <Footer />
    </div>
  );
}
